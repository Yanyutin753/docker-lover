
Docker file 文件内容

# 该镜像需要依赖的基础镜像
FROM openjdk:11
 
# 指定维护者的名字
MAINTAINER spring
 
# 将指定目录下的jar包复制到docker容器的/www/wwwroot/webServer/目录下
COPY WebServer-0.0.1-SNAPSHOT.jar /www/wwwroot/webServer/WebServer-0.0.1-SNAPSHOT.jar
COPY target /www/wwwroot/webServer/target
 
# 声明服务运行在8081端口
EXPOSE 8081
 
# 指定docker容器启动时运行jar包
ENTRYPOINT ["java", "-jar","/www/wwwroot/webServer/WebServer-0.0.1-SNAPSHOT.jar","--spring.datasource.username=root","--spring.datasource.password=lichun123456"]

------------------------------------------------------------------------------------------------

# 1.下载mysql镜像
#docker pull mysql:5.7
 
# 2.创建mysql容器并启动
docker run -p 3306:3306 --name mysql \
-v /export/mysql/conf:/etc/mysql/conf.d \
-v /export/mysql/log:/var/log/mysql \
-v /export/mysql/data:/var/lib/mysql \
-e MYSQL_ROOT_PASSWORD=lichun123456  \
-d mysql:5.7

# 3.将sql脚本拷贝到mysql容器的根目录下
docker cp /www/wwwroot/webServer/webserver.sql mysql:/;
 
# 4.进入运行mysql的docker容器
docker exec -it 1b970838805a /bin/bash
 
# 5.使用mysql命令打开客户端
mysql -uroot -plichun123456 --default-character-set=utf8mb4
 
# 6.修改root帐号的权限，使得任何ip都能访问
grant all privileges on *.* to 'root'@'%';
 drop database webserver

# 7.创建springboot_admin数据库：
create database webserver character set utf8mb4;
 
# 8.将sql文件导入到数据库
use webserver;
source /webserver.sql;

exit
exit
----------------------------------------

# 1.构建docker springboot应用镜像
docker build -t webserver/webserver-0.0.1 .
 
# 2.创建容器并启动
docker run -d -p 8888:8081 \
--name webserver \
--link mysql:db \
-v /export/Logs/WebServer-0.0.1:/export/Logs/WebServer-0.0.1 \
webserver/webserver-0.0.1
 
# 3.进入运行项目的docker容器
docker exec -it webserver /bin/bash
 
# 4.查看运行项目的日志
docker logs -f webserver